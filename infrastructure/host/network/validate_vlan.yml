---
- name: Validate VLAN configuration
  hosts: all
  become: true
  gather_facts: true
  vars:
    vlan_template_src: "vlan-config-{{ runner | lower }}.yaml.j2"

  tasks:
    - name: Render VLAN config template to local temp file
      ansible.builtin.template:
        src: "{{ vlan_template_src }}"
        dest: "/tmp/rendered-vlan.yaml"
        mode: '0644'

    - name: Read rendered VLAN config
      ansible.builtin.slurp:
        src: "/tmp/rendered-vlan.yaml"
      register: rendered_vlan_file

    - name: Parse YAML from rendered template
      set_fact:
       parsed_vlan_config: "{{ rendered_vlan_file['content'] | b64decode | from_yaml }}"

    - name: Extract expected VLAN interfaces
      set_fact:
        expected_vlan_interfaces: "{{ parsed_vlan_config.network.vlans.keys() | list }}"
        expected_vlan24_ip: "{{ parsed_vlan_config.network.vlans.vlan24.addresses[0] | default('') }}"
        expected_gateway: "{{ parsed_vlan_config.network.vlans.vlan24.gateway4 | default('') }}"
        expected_nameservers: "{{ parsed_vlan_config.network.vlans.vlan24.nameservers.addresses | default([]) }}"
    
    - name: Check that VLAN interfaces exist
      ansible.builtin.command: ip link show {{ item }}
      register: vlan_links
      changed_when: false
      failed_when: vlan_links.rc != 0
      loop: "{{ expected_vlan_interfaces }}"

    - name: Get IP address of vlan24
      ansible.builtin.command: ip -4 addr show vlan24
      register: vlan24_ip_info
      changed_when: false

    - name: Validate IP address of vlan24
      ansible.builtin.assert:
        that: "{{ expected_vlan24_ip }} in vlan24_ip_info.stdout"
        fail_msg: "Expected IP {{ expected_vlan24_ip }} not found on vlan24"
        success_msg: "IP address for vlan24 matches expected"

    - name: Get default route via vlan24
      ansible.builtin.command: ip route show default dev vlan24
      register: vlan24_gateway_info
      changed_when: false

    - name: Validate default gateway of vlan24
      ansible.builtin.assert:
        that: "'{{ expected_gateway }}' in vlan24_gateway_info.stdout"
        fail_msg: "Expected gateway {{ expected_gateway }} not found for vlan24"
        success_msg: "Gateway for vlan24 matches expected"
    
    - name: Get DNS info from systemd-resolved
      ansible.builtin.command: resolvectl status vlan24
      register: vlan24_dns_info
      changed_when: false
      failed_when: false

    - name: Validate expected nameservers are configured
      ansible.builtin.assert:
        that:
          - expected_nameservers | map('regex_search', vlan24_dns_info.stdout) | list | length == expected_nameservers | length
        fail_msg: "Not all expected nameservers ({{ expected_nameservers }}) are listed for vlan24"
        success_msg: "All expected nameservers found in systemd-resolved output for vlan24"
