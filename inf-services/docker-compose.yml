version: '3.4'
networks:
  vlan23:
    name: vlan23
    driver: ipvlan
    driver_opts:
      parent: vlan23
      ipvlan_mode: l2
    ipam:
      config: 
        - subnet: 10.2.3.0/24
          gateway: 10.2.3.1
  mongodb_unifi:
    name: mongodb_unifi
    internal: true
  host1:
    driver: bridge
  cloudflare_ext:
    name: cloudflare_ext
    internal: true

volumes: 
  pihole_data: 
  pihole_dnsmasq:
  portainer_data:
  unifi_config:
  mongodb_data:
  mongodb_config:

services:
  ntp:
    build: .
    image: cturra/ntp:latest
    container_name: ntp
    restart: always
    networks:
       vlan23:
          ipv4_address: ${ntp_ip}
    ports:
      - 123:123/udp
    read_only: true
    tmpfs:
      - /etc/chrony:rw,mode=1750
      - /run/chrony:rw,mode=1750
      - /var/lib/chrony:rw,mode=1750
    environment:
      NTP_SERVERS: ${NTP_SERVERS}
      LOG_LEVEL: 0
  
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    networks:
       vlan23:
          ipv4_address: ${pihole_ip}
       cloudflare_ext:
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      TZ: ${pihole_TZ}
      WEBPASSWORD: ${pihole_WEBPASSWORD}
    # Volumes store your data between container upgrades
    volumes:
      - pihole_data:/etc/pihole/
      - pihole_dnsmasq:/etc/dnsmasq.d/
    # Recommended but not required (DHCP needs NET_ADMIN)
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
  portainer:
    image: portainer/portainer-ce:latest
    networks:
       vlan23:
          ipv4_address: ${portainer_ip}
    ports:
      - 9443:80
    volumes:
        - portainer_data:/data
        - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
  
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    environment:
      - PUID=1000
      - PGID=1000
      - TZ= ${pihole_TZ}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
    volumes:
      - unifi_config:/config
    networks:
      - host1
      - mongodb_unifi
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped
  
  mongodb:
    image: mongodb-raspberrypi4-unofficial-r7.0.4
    env_file:
      - .env
    networks:
      - mongodb_unifi
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
  
  cloudflaredtunnel:
    container_name: cloudflared-tunnel
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TOKEN}
    networks:
      - host1
      - cloudflare_ext