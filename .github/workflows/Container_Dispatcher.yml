name: Container Dispatcher

on:
  push:
    paths:
      - 'docker/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-containers: ${{ steps.extract-folders.outputs.containers }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        id: get-changes
        uses: tj-actions/changed-files@v44
        with:
          files: |
            docker/**

      - name: Extract top-level container folders
        id: extract-folders
        run: |
          # Get unique first-level folders under /docker
          FOLDERS=$(echo "${{ steps.get-changes.outputs.all_changed_files }}" \
            | tr ' ' '\n' \
            | awk -F'/' '{print $2}' \
            | sort -u \
            | paste -sd "," -)
          
          echo "Changed container folders: $FOLDERS"
          echo "containers=$FOLDERS" >> $GITHUB_OUTPUT
  detect-branch:
    needs: detect-changes
    runs-on: ubuntu-latest
    outputs:
        runner_label: ${{steps.detect-runner.outputs.runner_label}}
    steps:
      - name: Set branch-specific runner
        id: detect-runner
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "runner_label=test" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF_NAME}" == "test" ]]; then
            echo "runner_label=test" >> $GITHUB_OUTPUT
          else
            echo "runner_label=dev" >> $GITHUB_OUTPUT
          fi

  read-config:
    needs: detect-changes
    runs-on: ubuntu-latest
    outputs:
      container-name: ${{ steps.read-config.outputs.name }}
      fqdn: ${{ steps.read-config.outputs.fqdn }}
      cert: ${{ steps.read-config.outputs.cert }}
      external: ${{ steps.read-config.outputs.external }}
      dedicated-ip: ${{ steps.read-config.outputs.dedicated_ip }}
      environment: ${{ steps.read-config.outputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get container configuration file
        id: get-config
        run: |
          CONTAINER="${{ needs.detect-changes.outputs.changed-containers }}"
          CONFIG_PATH="docker/$CONTAINER/configuration.yml"
          echo "CONFIG_PATH=$CONFIG_PATH" >> $GITHUB_ENV

      - name: Read configuration.yml
        id: read-config
        run: |
          NAME=$(yq -r '.name' "$CONFIG_PATH")
          FQDN=$(yq -r '.fqdn' "$CONFIG_PATH")
          CERT=$(yq -r '.certificate' "$CONFIG_PATH")
          EXTERNAL=$(yq -r '.external_access' "$CONFIG_PATH")
          DEDICATED_IP=$(yq -r '.dedicated_ip' "$CONFIG_PATH")
          ENVIRONMENT=$(yq -r '.environment' "$CONFIG_PATH")

          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "fqdn=$FQDN" >> $GITHUB_OUTPUT
          echo "cert=$CERT" >> $GITHUB_OUTPUT
          echo "external=$EXTERNAL" >> $GITHUB_OUTPUT
          echo "dedicated_ip=$DEDICATED_IP" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

  create-cert:
    needs: 
      - read-config
      - detect-branch
    if: ${{ needs.read-config.outputs.cert == 'true' }}
    uses: ./.github/workflows/CertBot-New-Certs.yml
    with:
      environment: "hosts"
      domain_name: ${{ needs.read-config.outputs.fqdn }}
      runs_on: ${{ needs.detect-branch.outputs.runner_label}}