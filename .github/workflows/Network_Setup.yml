name: VLAN Setup

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'Test'
jobs:
  setup-vlans:
    runs-on: ${{ 
      (inputs.environment == 'Dev') && fromJSON('["self-hosted", "dev"]') ||
      (inputs.environment == 'Test') && fromJSON('["self-hosted", "test"]') ||
      fromJSON('["self-hosted", "prod"]') }}

    env:
      BASE_DIR: 'infrastructure/network'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Ensure Ansible is Installed
        run: |
          if ! command -v ansible >/dev/null 2>&1; then
            echo "Ansible not found. Installing..."
            echo "${{ secrets.SUDO }}" | sudo -S apt update
            echo "${{ secrets.SUDO }}" | sudo -S apt install -y ansible
          else
            echo "Ansible already installed."
          fi

      - name: Create Ansible inventory
        run: |
          cd $BASE_DIR
          echo "localhost ansible_connection=local" > inventory.ini

      - name: Run Ansible playbook
        run: |
          cd $BASE_DIR
          echo "${{ secrets.SUDO }}" | sudo -S ansible-playbook vlan_setup.yml \
            -i inventory.ini -e "runner=${{inputs.environment}}"
  validate-config:
      name: Validate VLAN Setup
      environment: test
      runs-on: [self-hosted,test]

      needs: setup-vlans  # Ensures this runs *after* setup-config completes
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3
        - name: Ensure Ansible is Installed
          run: |
            if ! command -v ansible >/dev/null 2>&1; then
              echo "Ansible not found. Installing..."
              echo "${{ secrets.SUDO }}" | sudo -S apt update
              echo "${{ secrets.SUDO }}" | sudo -S apt install -y ansible
            else
              echo "Ansible already installed."
            fi
        - name: Create inventory
          run: |
            cd $BASE_DIR
            echo "localhost ansible_connection=local" > inventory.ini
        - name: Run VLAN validation playbook
          run: |
            cd $BASE_DIR
            echo "${{ secrets.SUDO }}" | sudo -S ansible-playbook validate_vlan.yml -i inventory.ini