name: Allocate IP Address

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      container_name:
        required: true
        type: string
      docker_host:
        required: true
        type: string
    outputs:
      ip_address:
        description: "Allocated IP address for the container"
        value: ${{ jobs.allocate-ip.outputs.ip_address }}

jobs:
  allocate-ip:
    runs-on: ubuntu-latest
    outputs:
      ip_address: ${{ steps.allocate.outputs.ip_address }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download previous IPAM artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: ipam-${{ inputs.docker_host }}
          path: ./ipam
        continue-on-error: true  # allow if artifact doesn't exist yet

      - name: Allocate or reuse IP
        id: allocate
        run: |
          set -e

          HOST="${{ inputs.docker_host }}"
          CONTAINER="${{ inputs.container_name }}"

          if [ "$HOST" = "pi4" ]; then
            SUBNET="10.2.5"
          else
            SUBNET="10.2.6"
          fi

          FILE="./ipam/${HOST}.csv"
          mkdir -p ./ipam
          touch "$FILE"

          # Ensure header exists
          if ! grep -q '^ip,container' "$FILE"; then
            echo "ip,container" > tmp.csv
            grep -v '^ip,container' "$FILE" >> tmp.csv || true
            mv tmp.csv "$FILE"
          fi

          # Check if container already has an IP
          EXISTING_IP=$(awk -F',' -v c="$CONTAINER" '$2==c {print $1}' "$FILE" | head -n1)

          if [ -n "$EXISTING_IP" ]; then
            echo "Container already has IP: $EXISTING_IP"
            echo "ip_address=$EXISTING_IP" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Allocate next free IP
          for i in $(seq 2 254); do
            IP="$SUBNET.$i"
            if ! grep -q "$IP" "$FILE"; then
              echo "$IP,$CONTAINER" >> "$FILE"
              echo "Allocated $IP to $CONTAINER"
              echo "ip_address=$IP" >> $GITHUB_OUTPUT
              break
            fi
          done

      - name: Upload updated IPAM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ipam-${{ inputs.environment }}
          path: ./ipam/${ENV}.csv